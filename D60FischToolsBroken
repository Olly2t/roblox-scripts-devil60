local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "D60 Fisch Extreme Tools",
    Icon = 0, 
    LoadingTitle = "Loading...",
    LoadingSubtitle = "By Devil60YT",
    Theme = "Light",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil, 
        FileName = "D60fisch"
    },
    Discord = {
        Enabled = true,
        Invite = "syG8dcSu6Q",
        RememberJoins = true
    },
    KeySystem = true,
    KeySettings = {
        Title = "D60 Fisch Extreme Tools",
        Subtitle = "Key System",
        Note = "Grab The Key From Discord",
        FileName = "FischData",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"D60ONTOP"}
    }
})

local Tab1 = Window:CreateTab("Fisch Cool Stuff", 4483362458)
local Tab2 = Window:CreateTab("Fisch Auto Farm", 4483362458)

local selectedPlayer = "" 
local coinValue = nil 

local Input_Player = Tab1:CreateInput({
    Name = "Player Selection",
    CurrentValue = "",
    PlaceholderText = "Enter Player Name",
    RemoveTextAfterFocusLost = false,
    Flag = "PlayerInput",
    Callback = function(Text)
        selectedPlayer = Text
    end,
})

local Input_Coins = Tab1:CreateInput({
    Name = "Coins Value",
    CurrentValue = "",
    PlaceholderText = "Enter Coin Value",
    RemoveTextAfterFocusLost = false,
    Flag = "CoinsInput",
    Callback = function(Text)
        coinValue = tonumber(Text)
    end,
})

local Button = Tab1:CreateButton({
    Name = "Push Changes / Apply Coins",
    Callback = function()
        if selectedPlayer ~= "" and coinValue then
            local playerStats = game:GetService("ReplicatedStorage"):WaitForChild("PlayerStats"):FindFirstChild(selectedPlayer)
            if playerStats then
                local coins = playerStats:WaitForChild("Stats"):FindFirstChild("Coins")
                if coins then
                    coins.Value = coinValue
                    print("Updated coins for " .. selectedPlayer .. " to " .. coinValue)
                else
                    warn("Coins stat not found for " .. selectedPlayer)
                end
            else
                warn("Player stats not found for " .. selectedPlayer)
            end
        else
            warn("Please ensure a valid player and coin value are entered.")
        end
    end,
})

local Toggle = Tab2:CreateToggle({
    Name = "Fishing Automation",
    CurrentValue = false,
    Flag = "FishingToggle",
    Callback = function(Value)
        if Value then
            startFishingAutomation()
        else
            stopFishingAutomation()
        end
    end,
})

local fishingAutomationEnabled = false

-- Define config and farm here to prevent nil errors
local config = {
    shakeSpeed = 0.1,  -- Example value, adjust as needed
    FreezeWhileFishing = true
}

local farm = {
    find_rod = function()
        -- Example function: Find the fishing rod in the player's inventory
        return game.Players.LocalPlayer.Backpack:FindFirstChild("FishingRod")
    end,
    
    freeze_character = function(freeze)
        local character = game.Players.LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = freeze and 0 or 16
                humanoid.JumpPower = freeze and 0 or 50
            end
        end
    end,

    cast = function()
        -- Example function: Cast the fishing rod
        print("Casting...")
    end,

    shake = function()
        -- Example function: Simulate shaking the rod
        print("Shaking rod...")
    end,

    reel = function()
        -- Example function: Reel the fish in
        print("Reeling in...")
    end
}

-- Start fishing automation
function startFishingAutomation()
    fishingAutomationEnabled = true
    task.spawn(function()
        while fishingAutomationEnabled do
            task.wait(config.shakeSpeed)
            local rod = farm.find_rod()
            if rod then
                if config.FreezeWhileFishing then
                    farm.freeze_character(true)
                end
                farm.cast()
                farm.shake()
                farm.reel()
            else
                farm.freeze_character(false)
            end
        end
    end)
end

-- Stop fishing automation
function stopFishingAutomation()
    fishingAutomationEnabled = false
end
